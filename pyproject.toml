[project]
name = "synclane"
version = "0.2.0"
description = "framework-agnostic RPC API with a smart auto-generated TypeScript client"
authors = [
  {email = "nikita.almakov@gmail.com", name = "Nikita Almakov"},
]
maintainers = [
  {email = "nikita.almakov@gmail.com", name = "Nikita Almakov"},
]
license = "MIT"
readme = "docs/README.md"
requires-python = ">=3.7"
classifiers = [
	"Development Status :: 4 - Beta",
	"Intended Audience :: Developers",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Topic :: Software Development :: Code Generators",
	"Topic :: Software Development :: Libraries",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities",
]

dependencies = [
    'pydantic >= 2',
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pytest-benchmark"]
lint = [
    "black",
    "flake8",
    "isort",
    "mypy",
    "pylint",
]
build = [
    "hatch",
]
doc = [
    "markdown-include",
    "mdx-truly-sane-lists",
    "mkdocs",
    "mkdocs-exclude",
    "mkdocs-material",
    "pygments",
    "pymdown-extensions",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.sources]
"src/synclane" = "synclane"

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.black]
line-length = 79
target-version = ['py39']

[tool.isort]
atomic = true
force_grid_wrap = 0
include_trailing_comma = true
indent = '    '
known_first_party = 'convtools'
line_length = 79
lines_after_imports = 2
lines_between_types = 0
multi_line_output = 3
order_by_type = true
use_parentheses = true
src_paths = ["src", "tests"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov synclane --cov-report term-missing --cov-report xml --verbose"
testpaths = [
    "tests",
]

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py39"

exclude = ["tests"]

[tool.ruff.lint]
select = [
  "A001",
  "A002",
  "B",
  "D",
  "D100", "D101", "D102", "D103", "D104",
  "E",
  "F",
  "PL",
  "SIM",
  # "ANN",
  # "RUF",
]
ignore = [
  "ANN101",
  "ANN102",
  "B904",
  "E501",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "SIM105",
]
unfixable = ["B"]


[tool.ruff.lint.pydocstyle]
convention = "google"
